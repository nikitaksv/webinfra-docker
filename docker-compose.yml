version: '3.4'

### NETWORKS #######################
networks: 
  proxy:
  default: 
    driver: bridge
    ipam:
      driver: default
      config: 
        - subnet: ${SUBNET}

### VOLUMES ########################
volumes:
  mysql_data:
  ldap_data:
  ldap_config:
  ldap_data_backup:
  bind_data:
  gitlab_data:
  gitlab_config:
  mail_data:
  mail_state:
  cloud_data:
  letsencrypt_certs:
  letsencrypt_vhost.d:
  letsencrypt_html:
  
### SERVICES ########################
services:

### NGINX ###########################
  nginx:
    container_name: ${COMPOSE_PROJECT_NAME}_${NGINX_CONTAINER_NAME}
    build:
      context: ./services/nginx
      args: 
        - NGINX_TAG_VERSION=${NGINX_TAG_VERSION}
    volumes: 
      - ${NGINX_CONFIG_PATH}:/etc/nginx/conf.d/
      - cloud_data:/var/www/html:ro
    environment: 
      - VIRTUAL_HOST=${NEXTCLOUD_CONTAINER_NAME}.${DOMAIN}
      - LETSENCRYPT_HOST=${NEXTCLOUD_CONTAINER_NAME}.${DOMAIN}
      - LETSENCRYPT_EMAIL=admin@${DOMAIN}
    expose:
      - ${NGINX_HTTP_PORT}
      - ${NGINX_HTTPS_PORT}
    networks: 
      proxy:
      default:   
        ipv4_address: ${NGINX_HOST}
    restart: always

### LDAP ###########################
  ldap:
    container_name: ${COMPOSE_PROJECT_NAME}_${LDAP_CONTAINER_NAME}
    hostname: ${LDAP_HOSTNAME}.${DOMAIN}
    build:
      context: ./services/ldap
      args: 
        - LDAP_TAG_VERSION=${LDAP_TAG_VERSION}
    volumes: 
      - ldap_data:/var/lib/ldap
      - ldap_config:/etc/ldap/slapd.d
      - ldap_data_backup:/data/backup
    environment: 
      - LDAP_DOMAIN=${DOMAIN}
      - LDAP_ORGANISATION=${LDAP_ORGANISATION}
      - LDAP_ADMIN_PASSWORD=${LDAP_ADMIN_PASSWORD}
      - LDAP_CONFIG_PASSWORD=${LDAP_ADMIN_PASSWORD}
      - LDAP_BACKUP_CONFIG_CRON_EXP=${LDAP_BACKUP_CONFIG_CRON_EXP}
      - LDAP_BACKUP_DATA_CRON_EXP=${LDAP_BACKUP_DATA_CRON_EXP}
      - LDAP_BACKUP_TTL=${LDAP_BACKUP_TTL}
      - LDAP_REMOVE_CONFIG_AFTER_SETUP=${LDAP_REMOVE_CONFIG_AFTER_SETUP}
    networks: 
      default:
        aliases: 
          - ${LDAP_HOSTNAME}.${DOMAIN}
    restart: always

### LDAP-CLIENT ####################
  ldap-client:
    container_name: ${COMPOSE_PROJECT_NAME}_${LDAP_CLIENT_CONTAINER_NAME}
    build:
      context: ./services/ldap-client
      args: 
        - LDAP_CLIENT_TAG_VERSION=${LDAP_CLIENT_TAG_VERSION}
    environment:
      - PHPLDAPADMIN_LDAP_HOSTS=${LDAP_HOSTNAME}.${DOMAIN}
      - VIRTUAL_HOST=${LDAP_CLIENT_HOSTNAME}.${DOMAIN}
      - LETSENCRYPT_HOST=${LDAP_CLIENT_HOSTNAME}.${DOMAIN}
      - LETSENCRYPT_EMAIL=admin@${DOMAIN}
    depends_on:
      - ldap
    expose:
      - ${LDAP_CLIENT_EXPOSE}
      - 443
    restart: always
    networks: 
      default:
        ipv4_address: ${LDAP_CLIENT_HOST}
        aliases: 
          - ${LDAP_CLIENT_HOSTNAME}.${DOMAIN}

### BIND ###########################
  bind:
    container_name: ${COMPOSE_PROJECT_NAME}_${BIND_CONTAINER_NAME}
    build:
      context: ./services/bind
      args: 
        - BIND_TAG_VERSION=${BIND_TAG_VERSION}
    environment: 
      - VIRTUAL_HOST=${BIND_HOSTNAME}.${DOMAIN}
      - VIRTUAL_PORT=${BIND_WEDMIN_EXPOSE}
      - LETSENCRYPT_HOST=${BIND_HOSTNAME}.${DOMAIN}
      - LETSENCRYPT_EMAIL=admin@${DOMAIN}
    ports: 
      - ${BIND_EXPOSE}:${BIND_EXPOSE}
    expose:
      - ${BIND_WEDMIN_EXPOSE}
    restart: always
    volumes:
      - bind_data:/data 
    networks: 
      default:
        ipv4_address: ${BIND_HOST}
        aliases: 
          - ${BIND_HOSTNAME}.${DOMAIN}

### REDMINE ########################
  redmine:
    container_name: ${COMPOSE_PROJECT_NAME}_${REDMINE_CONTAINER_NAME}
    hostname: ${REDMINE_HOSTNAME}.${DOMAIN}
    build:
      context: ./services/redmine
      args: 
        - REDMINE_TAG_VERSION=${REDMINE_TAG_VERSION}
    volumes: 
      - ${REDMINE_DATA_PATH}:/usr/src/redmine/files
      - ${REDMINE_CONFIGURATION_FILE_PATH}:/usr/src/redmine/config/configuration.yml
    environment: 
      - REDMINE_DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - REDMINE_DB_DATABASE=${MYSQL_DATABASE}
      - REDMINE_DB_MYSQL=${MYSQL_HOST}
      - VIRTUAL_HOST=${REDMINE_HOSTNAME}.${DOMAIN}
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=${REDMINE_HOSTNAME}.${DOMAIN}
      - LETSENCRYPT_EMAIL=admin@${DOMAIN}
    depends_on: 
      - mysql
    expose: 
      - 80
      - 443
    networks: 
      default:
        ipv4_address: ${REDMINE_HOST}
        aliases: 
          - ${REDMINE_HOSTNAME}.${DOMAIN}
    restart: always

### MYSQL ##########################
  mysql:
    container_name: ${COMPOSE_PROJECT_NAME}_${MYSQL_CONTAINER_NAME}
    build:
      context: ./services/mysql
      args: 
        - MYSQL_TAG_VERSION=${MYSQL_TAG_VERSION}
    environment: 
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TZ}
    volumes: 
      - mysql_data:/var/lib/mysql
    networks: 
      default:
        ipv4_address: ${MYSQL_HOST}
    restart: always

### GITLAB #########################
  gitlab:
    container_name: ${COMPOSE_PROJECT_NAME}_${GITLAB_CONTAINER_NAME}
    build:
      context: ./services/gitlab
      args: 
        - GITLAB_TAG_VERSION=${GITLAB_TAG_VERSION}
    environment: 
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://${GITLAB_HOSTNAME}.${DOMAIN}/'
        gitlab_rails['lfs_enabled'] = true
        gitlab_rails['smtp_enable'] = true
        gitlab_rails['smtp_address'] = '${MAIL_HOST}'
        gitlab_rails['smtp_port'] = '25'
        gitlab_rails['smtp_domain'] = '${MAIL_HOST}'
        gitlab_rails['smtp_authentication'] = 'plain'
        gitlab_rails['smtp_user_name'] = 'git@${DOMAIN}'
        gitlab_rails['smtp_password'] = 'defender'
        gitlab_rails['smtp_enable_starttls_auto'] = false
        gitlab_rails['gitlab_email_from'] = 'git@${DOMAIN}'
        gitlab_rails['smtp_tls'] = false
        gitlab_rails['smtp_openssl_verify_mode'] = 'peer'
      VIRTUAL_HOST: ${GITLAB_HOSTNAME}.${DOMAIN}
      LETSENCRYPT_HOST: ${GITLAB_HOSTNAME}.${DOMAIN}
      LETSENCRYPT_EMAIL: admin@${DOMAIN}
    volumes: 
      - gitlab_data:/var/opt/gitlab
      - gitlab_config:/etc/gitlab
      - ${GITLAB_LDAP_CONFIG_PATH}:/etc/gitlab/gitlab.rb
      - ${GITLAB_LOGS_PATH}:/var/log/gitlab
    expose: 
      - 80
      - 443
    networks: 
      default:
        ipv4_address: ${GITLAB_HOST}
        aliases: 
          - ${GITLAB_HOSTNAME}.${DOMAIN}
    restart: always

### ROUNDCUBEMAIL ##################
  roundcube:
    container_name: ${COMPOSE_PROJECT_NAME}_${ROUNDCUBEMAIL_CONTAINER_NAME}
    build:
      context: ./services/roundcube
      args: 
        - ROUNDCUBEMAIL_TAG_VERSION=${ROUNDCUBEMAIL_TAG_VERSION}
    volumes: 
      - ${ROUNDCUBEMAIL_CONFIG_PATH}:/var/roundcube/config/
    environment: 
      - ROUNDCUBEMAIL_DEFAULT_HOST=${MAIL_HOST}
      - ROUNDCUBEMAIL_SMTP_SERVER=${MAIL_HOST}
      - ROUNDCUBEMAIL_SMTP_PORT=25
      - ROUNDCUBEMAIL_DB_TYPE=mysql
      - ROUNDCUBEMAIL_DB_HOST=${MYSQL_HOST}
      - ROUNDCUBEMAIL_DB_USER=${MYSQL_USER}
      - ROUNDCUBEMAIL_DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - ROUNDCUBEMAIL_DB_NAME=${ROUNDCUBEMAIL_DB_NAME}
      - VIRTUAL_HOST=${ROUNDCUBEMAIL_HOSTNAME}.${DOMAIN}
      - LETSENCRYPT_HOST=${ROUNDCUBEMAIL_HOSTNAME}.${DOMAIN}
      - LETSENCRYPT_EMAIL=admin@${DOMAIN}
    networks: 
      default:
        ipv4_address: ${ROUNDCUBEMAIL_HOST}
        aliases: 
          - ${ROUNDCUBEMAIL_HOSTNAME}.${DOMAIN}
    expose:
      - 80
      - 443
    restart: always

### MAIL ###########################
  mail:
    hostname: ${MAIL_HOSTNAME}
    domainname: ${DOMAIN}
    container_name: ${COMPOSE_PROJECT_NAME}_${MAIL_CONTAINER_NAME}
    build:
      context: ./services/mail
      args: 
        - MAIL_TAG_VERSION=${MAIL_TAG_VERSION}
    ports:
      - "25:25"
      - "143:143"
      - "587:587"
      - "465:465"
      - "993:993"
    volumes:
      - mail_data:/var/mail
      - mail_state:/var/mail-state
      - ./mail/config/:/tmp/docker-mailserver/
      - ./mail/ssl/:/ssl/
    environment:
      - ENABLE_SPAMASSASSIN=${ENABLE_SPAMASSASSIN}
      - ENABLE_CLAMAV=${ENABLE_CLAMAV}
      - ENABLE_FAIL2BAN=${ENABLE_FAIL2BAN}
      - ENABLE_POSTGREY=${ENABLE_POSTGREY}
      - ENABLE_SASLAUTHD=${ENABLE_SASLAUTHD}
      - ENABLE_LDAP=${ENABLE_LDAP}
      - ONE_DIR=${ONE_DIR}
      - DMS_DEBUG=${DMS_DEBUG}     
      - SA_SPAM_SUBJECT=${SA_SPAM_SUBJECT} 
      - LDAP_SERVER_HOST=${LDAP_HOSTNAME}.${DOMAIN}
      - LDAP_SEARCH_BASE=${LDAP_SEARCH_BASE}
      - LDAP_BIND_DN=${LDAP_BIND_DN}
      - LDAP_BIND_PW=${LDAP_BIND_PW}
      - LDAP_QUERY_FILTER_USER=${LDAP_QUERY_FILTER_USER}
      - LDAP_QUERY_FILTER_GROUP=${LDAP_QUERY_FILTER_GROUP}
      - LDAP_QUERY_FILTER_ALIAS=${LDAP_QUERY_FILTER_ALIAS}
      - LDAP_QUERY_FILTER_DOMAIN=${LDAP_QUERY_FILTER_DOMAIN}
      - DOVECOT_PASS_FILTER=${DOVECOT_PASS_FILTER}
      - DOVECOT_PASS_ATTRS=${DOVECOT_PASS_ATTRS}
      - DOVECOT_USER_FILTER=${DOVECOT_USER_FILTER}
      - DOVECOT_USER_ATTRS=${DOVECOT_USER_ATTRS}
      - SASLAUTHD_MECHANISMS=${SASLAUTHD_MECHANISMS}
      - SASLAUTHD_LDAP_SERVER=${LDAP_HOSTNAME}.${DOMAIN}
      - SASLAUTHD_LDAP_SEARCH_BASE=${SASLAUTHD_LDAP_SEARCH_BASE}
      - SASLAUTHD_LDAP_BIND_DN=${SASLAUTHD_LDAP_BIND_DN}
      - SASLAUTHD_LDAP_PASSWORD=${SASLAUTHD_LDAP_PASSWORD}
      - SASLAUTHD_LDAP_FILTER=${SASLAUTHD_LDAP_FILTER}
      - POSTMASTER_ADDRESS=postmaster@${DOMAIN}
      - SSL_TYPE=${SSL_TYPE}
      - PERMIT_DOCKER=${PERMIT_DOCKER}
      - VIRTUAL_HOST=smtp.${DOMAIN},imap.${DOMAIN}
      - VIRTUAL_PORT=25,143,587,465,993
      - LETSENCRYPT_HOST=smtp.${DOMAIN},imap.${DOMAIN}
      - LETSENCRYPT_EMAIL=admin@${DOMAIN}
    networks: 
      default:
        ipv4_address: ${MAIL_HOST}
        aliases: 
          - smtp.${DOMAIN}
          - imap.${DOMAIN}
    cap_add:
      - NET_ADMIN
      - SYS_PTRACE

### NEXTCLOUD ######################
  cloud:
    container_name: ${COMPOSE_PROJECT_NAME}_${NEXTCLOUD_CONTAINER_NAME}
    build:
      context: ./services/cloud
      args: 
        - NEXTCLOUD_TAG_VERSION=${NEXTCLOUD_TAG_VERSION}
    volumes: 
      - cloud_data:/var/www/html
    environment: 
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_DATABASE=${NEXTCLOUD_MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
    networks: 
      proxy:
      default:   
        ipv4_address: ${NEXTCLOUD_HOST}
        aliases: 
          - ${NEXTCLOUD_CONTAINER_NAME}.${DOMAIN}
    restart: always

### NGINXPROXY #####################
  nginxproxy:
    container_name: ${COMPOSE_PROJECT_NAME}_${NGINXPROXY_CONTAINER_NAME}
    build:
      context: ./services/nginxproxy
      args:
        - NGINXPROXY_TAG_VERSION=${NGINXPROXY_TAG_VERSION}
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes: 
      - letsencrypt_certs:/etc/nginx/certs:ro
      - letsencrypt_vhost.d:/etc/nginx/vhost.d
      - letsencrypt_html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: always
    ports: 
      - 80:80
      - 443:443
    networks: 
      proxy:

### LETSENCRYPT-COMPANION ##########
  letsencrypt:
    container_name: ${COMPOSE_PROJECT_NAME}_${LETSENCRYPT_CONTAINER_NAME}
    build:
      context: ./services/letsencrypt
      args:
        - LETSENCRYPT_TAG_VERSION=${LETSENCRYPT_TAG_VERSION}
    volumes: 
      - letsencrypt_certs:/etc/nginx/certs
      - letsencrypt_vhost.d:/etc/nginx/vhost.d:rw
      - letsencrypt_html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment: 
      - DEBUG=true
      - NGINX_PROXY_CONTAINER=nginxproxy
      - ACME_CA_URI=https://acme-staging.api.letsencrypt.org/directory
    restart: always
    depends_on: 
      - nginxproxy
    networks: 
      proxy: